How JankyProxy works:

At my house, we have a comcast modem, and a firewall. I don’t have access to the firewall, but I do have access to the modem. I want to be able to ssh into something behind the firewall. But, this seems impossible: I can’t setup port forwarding on the firewall. 

Enter Jankyproxy.
I have a Raspberry Pi plugged into the modem, not behind the firewall.
There are two programs running. JankyProxyD on the raspberry pi, and JankyProxyU on the laptop I want to ssh into.

JankyProxyU makes a connection to JankyProxyD on port 12345 on the raspberry pi. They leave this connection open. That’s all that happens initially. This is the key part. JankyProxyD can’t make any sort of connection to JankyProxyU, but JankyProxyD can make a connection to JankyProxyD. 



Let’s say I want to ssh into my laptop. I ssh into my raspberry pi on port 12344. 
JankyProxyD notices this (it’s listening on that port), and starts forwarding.
Every byte I send to the raspberry pi on port 12344 gets sent to it’s socket connection to JankyProxyU (on my laptop).
Every byte the raspberry pi receives from its connection to JankyProxyU gets forwarded back to me and my ssh client.
So now I have a connection to JankyProxyU running on my laptop, with everything being forwarded through the raspberry pi.
Other than keeping a connection to JankyProxyD open, JankyProxyU also does another feature: the first time it receives data from JankyProxyD, it opens a connection to localhost:22, and starts forwarding bytes the same way. 
Now I have a connection to my laptop behind by firewall, being forwarded though two java programs and a raspberry pi. And it works. (but a little slow)